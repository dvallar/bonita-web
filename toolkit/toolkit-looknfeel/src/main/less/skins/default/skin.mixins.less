.fontSize(@pFontSize){
	//@calcValue: ;
	font-size: percentage(@pFontSize / @skinFontSize);
}

.revertfontSize(@pFontSize){
	font-size: percentage((@pFontSize - 6px)/@skinFontSize);
	//@calcValue: percentage(@pFontSize/@skinFontSize);
	//@calcValueFinal: 1 -(@calcValue/100);
	//font-size: percentage(@calcValueFinal);
	//font-size: 100% - @calcValue; 
}

//-----------------------------------------------------------------------------
// specific application mixin
//-----------------------------------------------------------------------------

/* buttons */
.skinButton(@btnColor, @txtColor: #fff, @strokeColor: transparent){
	color: @txtColor;
	span{
		color: @txtColor;
	}
	padding: @button-padding;
	outline-color: lighten(@btnColor, 10%);
	min-width: @button-minWidth;
	border: @button-border;
	border-color: darken(@btnColor, 15%);
	text-transform: uppercase;
	font-family: @skinFont;
	.stroke(1px, @strokeColor);
	.fontSize(@button-fontSize);
	.borderRadius(@button-radius);
	.button(@button-height);
	.verticalGradient(lighten(@btnColor, 8.5%), 0%, @btnColor, 100%);
	.pointerAsLink();
	.boxShadow(@button-shadowX, @button-shadowY, @button-shadowBlur, @button-shadowColor);
	+ .btn, +css3-container +.btn{
		margin-left: @button-marginBetween;
	}
	overflow: hidden;
	zoom: 1;
}

.dynamicStroke(@txtColor) when(lightness(@txtColor) < 50%){
	.stroke(1px, lighten(@txtColor, 100% - lightness(@txtColor)));
}

.pagerButton(@btnColor, @btnImage, @btnImageDisable){
	outline-color: lighten(@btnColor, 10%);
	border: @button-pager-border;
	.hideText();
	.borderRadius(@button-radius);
	.button(@button-pager-height);
	width: @button-pager-width;
	.bg(@btnImage, no-repeat, @btnColor, @button-pager-bgX, @button-pager-bgY);
	&:hover{
		border: @button-pager-borderHover;
	}
	&.disable{
		border: @button-pager-border-disable;
		.bg(@btnImageDisable, no-repeat, @btnColor, @button-pager-bgX, @button-pager-bgY);
		cursor: default;
	}
	+ a, + css3-container + a{
		margin: @button-pager-marginBetween;
	}
}
.addButton(@btnColor, @txtColor: #fff){
	.specialButton(@btnColor, @txtColor, transparent);
	&:before{
		position: absolute;
		content: "";
		display: block;
		left: 0;
		top: 0;
		height: 100%;
		width: @addbutton-bgWidth;
		.bg(@addbutton-bg);
	}
	padding: @addbutton-padding;
	background-image: @addbutton-bg !important;
	background-position: left center !important;
	background-repeat: no-repeat !important;
	text-align: @addbutton-txtAlign !important;
}

.specialButton(@btnColor, @txtColor: #fff, @strokeTxtColor: transparent){
	text-transform: uppercase;
	color: @txtColor;
	padding: @button-padding;
	outline-color: lighten(@btnColor, 10%);
	min-width: @button-minWidth;
	border: @button-border;
	border-color: darken(@btnColor, 3%);
	.fontSize(@button-fontSize);
	.borderRadius(@button-radius);
	.button(@button-height);
	.verticalGradient(lighten(@btnColor, 8.5%), 0%, @btnColor, 100%);
	.stroke(1px, @strokeTxtColor);
	position: relative;
}


.stroke(@strokeWidth, @strokeColor){
	text-shadow:
	0 0 0 @strokeColor,
	-@strokeWidth -@strokeWidth 0 @strokeColor,  
	@strokeWidth -@strokeWidth 0 @strokeColor,
	-@strokeWidth @strokeWidth 0 @strokeColor,
	@strokeWidth @strokeWidth 0 @strokeColor;
}

.loginButton(@btnColor, @txtColor: #fff){
	.pointerAsLink();
	.borderRadius(@loginPage-form-formactions-button-radius);
	color: @txtColor;
	padding: @loginPage-form-formactions-button-padding;
	outline-color: lighten(@btnColor, 10%);
	min-width: @loginPage-form-formactions-button-minWidth;
	border: @button-border;
	border-color: darken(@btnColor, 2%);
	.fontSize(@button-fontSize);
	.button(@loginPage-form-formactions-button-height);
	.verticalGradient(lighten(@btnColor, 8.5%), 0%, @btnColor, 100%);
	.boxShadowInner(@loginPage-form-formactions-button-shadowInnerX, @loginPage-form-formactions-button-shadowInnerY, @loginPage-form-formactions-button-shadowInnerBlur, lighten(desaturate(@btnColor, 25%), 29%));
}

/* filters */

.bgFilter(@bg, @bgColor: transparent, @bgLeft: @filtersPanel-filters-currentLine-backgroundLeft){
	.bg(@bg, no-repeat, @bgColor, @bgLeft, @filtersPanel-filters-currentLine-backgroundTop);
}
.bgSubFilter(@bg, @bgColor: transparent, @bgLeft: @filtersPanel-subfilters-currentLine-backgroundLeft){
	padding: @filtersPanel-filters-paddingTop @filtersPanel-filters-paddingRight @filtersPanel-filters-paddingBottom @filtersPanel-subfilters-paddingLeft;
	.fontSize(@filtersPanel-subfilters-fontSize);
	.bgFilter(@bg, @bgColor, @bgLeft);
}
.bgHoverFilter(@bg, @bgLeft: @filtersPanel-filters-currentLine-backgroundLeft, @bgTop: @filtersPanel-filters-currentLine-backgroundTop, @c1:@header-menu-gradientColor1Hover, @p1:@header-menu-gradientPosition1, @c2:@header-menu-gradientColor2Hover, @p2:@header-menu-gradientPosition2){
	.bg(@bg, ~"no-repeat @{bgLeft} @{bgTop},-webkit-linear-gradient(top, @{c1} @{p1}, @{c2} @{p2})");
	.bg(@bg, ~"no-repeat @{bgLeft} @{bgTop},-moz-linear-gradient(top, @{c1} @{p1}, @{c2} @{p2})");
	.bg(@bg, ~"no-repeat @{bgLeft} @{bgTop}, -ms-linear-gradient(top, @{c1} @{p1}, @{c2} @{p2})");
	.bg(@bg, ~"no-repeat @{bgLeft} @{bgTop}, linear-gradient(to bottom, @{c1} @{p1}, @{c2} @{p2})");
	.bgPie(@bg, ~"no-repeat @{bgLeft} @{bgTop}, linear-gradient(to bottom, @{c1} @{p1}, @{c2} @{p2})");
}
.bgHoverSubFilter(@bg, @bgLeft: @filtersPanel-subfilters-currentLine-backgroundLeft,  @bgTop: @filtersPanel-filters-currentLine-backgroundTop, @c1:@header-menu-gradientColor1Hover, @p1:@header-menu-gradientPosition1, @c2:@header-menu-gradientColor2Hover, @p2:@header-menu-gradientPosition2){
	padding: @filtersPanel-filters-paddingTop @filtersPanel-filters-paddingRight @filtersPanel-filters-paddingBottom @filtersPanel-subfilters-paddingLeft;
	.fontSize(@filtersPanel-subfilters-fontSize);
	.bgHoverFilter(@bg, @bgLeft, @bgTop, @c1, @p1, @c2, @p2);
}
.bgCurrentFilter(@bg, @bgColor: @filtersPanel-filterHover-bgColor){
	.bgFilter(@bg,@bgColor);
}
.bgCurrentSubFilter(@bg, @bgColor:@filtersPanel-filterHover-bgColor){
	.bgSubFilter(@bg, @bgColor);
}

/* avatar sizes */


.iconMixin(@context) when(@context=list){
	.iconMaxSize(@tablesPanel-table-icon-maxHeight, @tablesPanel-table-icon-maxWidth);
}

.iconMixin(@context) when(@context=details){
	.iconMaxSize(@detailsPanel-table-icon-maxHeight, @detailsPanel-table-icon-maxWidth);
}

.iconMixin(@context) when(@context=moreDetails){
	.iconMaxSize(@moreDetails-table-icon-maxHeight, @moreDetails-table-icon-maxWidth);
}

.iconMixin(@context) when(@context=popup){
	.iconMaxSize(@popup-table-icon-maxHeight, @popup-table-icon-maxWidth);
}

.iconMixin(@context) when(@context=userAvatar){
	.iconMaxSize(@userAvatar-table-icon-maxHeight, @userAvatar-table-icon-maxWidth);
}

.iconMaxSize(@max-height, @max-width){
	img{
		max-height: @max-height;
		max-width: @max-width;
	}
}


/* more details mixins which are used in specific views(ej. report)*/
.moreDetails_title(){
	overflow: hidden;
	float: @moreDetails-metadatas-title-float;
	width: @moreDetails-metadatas-title-width;
	padding: @moreDetails-metadatas-title-padding;
	margin: @moreDetails-metadatas-title-margin;
	.fontSize(@moreDetails-metadatas-title-fontSize);
	.boxSizing();
}
.moreDetails_description(){
	overflow: hidden;
	padding: @moreDetails-metadatas-description-padding;
	float: @moreDetails-metadatas-description-float;
	width: @moreDetails-metadatas-description-width;
	.boxSizing();
	text-overflow: ellipsis;
	word-wrap: break-word;
	padding-bottom: @moreDetails-metadatas-description-padding-bottom;
}

.label(){
	color: @mainAccentColor;
}
label{
	.label();
}
.moreDetails_section_title{
	padding: @moreDetails-title-padding;
	margin: @moreDetails-title-margin;
	display: inline-block;
	.fontSize(@moreDetails-title-fontSize);
}
.table_header(){
	display: table-header-group;
	float: none;
	width: 100%;
	color: @table-header-color;
	border-collapse: separate;
	.tr{
		position: relative;
		display: table-row;
		float: none;
		.verticalGradient(@table-header-gradientColor1, @table-header-gradientPosition1, @table-header-gradientColor2, @table-header-gradientPosition2);
		.th{
			position: relative;
			.fontSize(@table-header-fontSize);
			height: @table-header-cell-height;
			padding: @table-header-cell-padding;
			border: none;
			display: table-cell;
			float: none;
			&:before{
				border-left: @table-header-cell-borderLeft;
				margin: @table-header-cell-border-top 0 0(0 - @table-header-cell-paddingX);
				content: "";
				display: block;
				width: 0;
				height: @table-header-cell-borderHeight;
				position: absolute;
			}
			&_1:before{
				display: none;
			}
			&_1{
				.borderRadius(@defaultRadius, 0px, 0px, 0px);
			}
			&_last{
				.borderRadius(0px, @defaultRadius, 0px, 0px);
			}
		}
	}
}

.table_line(){
	width: 100%;
	display: table-row;
	float: none;
	position: relative;
	background: #fff;
	.td{
		position: relative;
		float: none;
		display: table-cell;
		border: @table-cell-border;
		padding: @table-cell-padding;
		vertical-align: middle;
		&.td_icon{
			.iconMixin(list);
		}
		&.td_actions{
			a{
				margin-right: 8px;
				text-decoration: underline;
			}
		}
	}
	&_last{
		.td{
			&_1{
				position: relative;
				.borderRadius(0px, 0px, 0px, @defaultRadius);
			}
			&_last{
				position: relative;
				.borderRadius(0px, 0px, @defaultRadius, 0px);
			}
		}
	}

}
.section_border(){
	border-top: @moreDetails-section-header-borderTop;
	padding: @moreDetails-section-header-padding;
}

.link {
    color: @fontColor;
    text-decoration: underline;
}